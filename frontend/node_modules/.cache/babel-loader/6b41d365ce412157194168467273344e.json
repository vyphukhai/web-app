{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\frontend\\\\src\\\\screens\\\\CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart } from \"../actions/cartActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CartScreen(props) {\n  _s();\n\n  const productId = props.match.params.id;\n  const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row top\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shopping Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        children: [\"Cart is empty. \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Go Shopping\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: cartItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartScreen, \"O8kV4FMad4uUEER48J0xtNwHiNw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["D:/Web/frontend/src/screens/CartScreen.js"],"names":["React","useEffect","useDispatch","useSelector","addToCart","CartScreen","props","productId","match","params","id","qty","location","search","Number","split","cart","state","cartItems","dispatch","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,wBAA1B;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACxC,QAAMC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAArC;AACA,QAAMC,GAAG,GAAGL,KAAK,CAACM,QAAN,CAAeC,MAAf,GACRC,MAAM,CAACR,KAAK,CAACM,QAAN,CAAeC,MAAf,CAAsBE,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAD,CADE,GAER,CAFJ;AAGA,QAAMC,IAAI,GAAGb,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAgBF,IAAtB;AACA,QAAMG,QAAQ,GAAGjB,WAAW,EAA5B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,SAAJ,EAAe;AACbY,MAAAA,QAAQ,CAACf,SAAS,CAACG,SAAD,EAAYI,GAAZ,CAAV,CAAR;AACD;AACF,GAJQ,EAIN,CAACQ,QAAD,EAAWZ,SAAX,EAAsBI,GAAtB,CAJM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGO,SAAS,CAACE,MAAV,KAAqB,CAArB,gBAAuB,QAAC,UAAD;AAAA,mDACP,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADO;AAAA;AAAA;AAAA;AAAA;AAAA,cAAvB,gBAKC;AAAA,kBAEIF;AAFJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA/BuBb,U;UAKTF,W,EAEID,W;;;KAPKG,U","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addToCart } from \"../actions/cartActions\";\r\n\r\nexport default function CartScreen(props) {\r\n  const productId = props.match.params.id;\r\n  const qty = props.location.search\r\n    ? Number(props.location.search.split(\"=\")[1])\r\n    : 1;\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n  return (\r\n    <div className=\"row top\">\r\n      <div className=\"col-2\">\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0?<MessageBox>\r\n          Cart is empty. <Link to=\"/\">Go Shopping</Link>\r\n        </MessageBox>\r\n        :\r\n        (\r\n          <ul>\r\n            {\r\n              cartItems\r\n            }\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}